databaseChangeLog:
  - changeSet:
        id: checker_is_paid
        author: workwithdante
        runOnChange: true
        changes:
            - sql:
                splitStatements: false
                stripComments: true
                sql: |
                    CREATE OR REPLACE FUNCTION checkers.is_paid(input_data_csv JSONB, input_data_crm JSONB)
                        RETURNS config.rule_out
                        LANGUAGE plpgsql
                        STABLE
                    AS $$
                        DECLARE
                            paid_through_date       DATE := parsers.parse_date_mixed(input_data_csv ->> 'paid_through_date');
                            paid_through_date_crm   DATE := parsers.parse_date_mixed(input_data_crm ->> 'paid_through_date');
                            last_day_of_month       DATE := helpers.last_day_curdate();
                            out_rec                 config.rule_out;
                        BEGIN
                            out_rec.applies := paid_through_date >= last_day_of_month AND paid_through_date = paid_through_date_crm;
                            
                            out_rec.label_out := NULL;

                            IF checkers.is_wrong_tipific(input_data_crm) THEN
                                out_rec.label_out := 'Paid With Ticket';
                            END IF;

                            RETURN out_rec;
                        END;
                    $$;

            - sql:
                sql: |
                    INSERT INTO config.rules(rule_fn, result_label, priority) VALUES
                        ('checkers.is_paid(jsonb,jsonb)'::regprocedure, 'Paid', 60)
                    ON CONFLICT (rule_fn)
                    DO UPDATE
                        SET priority = EXCLUDED.priority;

        rollback:
            - sql:
                sql: |
                    DROP FUNCTION IF EXISTS checkers.is_paid(JSONB, JSONB);
                    DELETE FROM config.rules WHERE rule_fn = 'checkers.is_paid(jsonb,jsonb)'::regprocedure;