databaseChangeLog:
  - changeSet:
      id: create_build_args_csv
      author: workwithdante
      runOnChange: true
      changes:
        - sql:
            splitStatements: false
            stripComments: true
            sql: |
              CREATE OR REPLACE FUNCTION builders.build_args_csv(
                    p_dispatcher_id INT
                ) RETURNS TEXT
                AS $$
              DECLARE
                  args_company TEXT;
                  v_schema TEXT;
                  v_table TEXT;
              BEGIN
                  SELECT csd.company, csd.tbl
                    INTO v_schema, v_table
                  FROM config.dispatcher csd
                  WHERE csd.id = p_dispatcher_id;
                  IF v_schema IS NULL THEN
                      RETURN NULL;
                  END IF;
                  SELECT string_agg(
                      CASE 
                          WHEN c.data_type IN (
                              'date',
                              'timestamp',
                              'timestamp without time zone',
                              'timestamp with time zone',
                              'character varying',
                              'text'
                          ) AND f.field_name ~* 'date' THEN
                              format('%L, TO_CHAR(company.%I::date, ''YYYY-MM-DD'')',
                                     f.field_name,
                                     si.column_name)
                          WHEN c.data_type IN ('character varying','text')
                               AND f.field_name ~* 'premium' THEN
                              format(
                                '%L, COALESCE(CASE WHEN company.%I ~ ''^\$'' THEN CAST(regexp_replace(company.%I, ''^\$'', '''', ''g'') AS NUMERIC) WHEN company.%I IS NULL THEN NULL ELSE company.%I::NUMERIC END, NULL)',
                                f.field_name, si.column_name, si.column_name, si.column_name, si.column_name
                              )
                          WHEN c.data_type IN ('integer','bigint','smallint') THEN
                              format('%L, COALESCE(company.%I,0)', f.field_name, si.column_name)
                          ELSE
                              format('%L, company.%I', f.field_name, si.column_name)
                      END,
                      ', '
                  ) INTO args_company
                  FROM config.input_field si
                  JOIN config.fields f ON si.field_id = f.id
                  JOIN information_schema.columns c
                    ON c.table_schema = v_schema
                   AND c.table_name   = v_table
                   AND c.column_name  = si.column_name
                  WHERE si.dispatcher_id = p_dispatcher_id;
                  RETURN args_company;
              END;
              $$ LANGUAGE plpgsql IMMUTABLE;
      rollback:
          - sql:
              splitStatements: false
              stripComments: true
              sql: DROP FUNCTION IF EXISTS builders.build_args_csv(INT) CASCADE;