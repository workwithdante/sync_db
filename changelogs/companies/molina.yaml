databaseChangeLog:
    - changeSet:
        id: create_schema_molina
        author: workwithdante
        changes:
            - sql:
                sql: CREATE SCHEMA IF NOT EXISTS molina;
        rollback:
            - sql:
                sql: DROP SCHEMA IF EXISTS molina CASCADE;

    - changeSet:
        id: create_unlogged_temp_molina
        author: workwithdante
        changes:
            - sql:
                sql: |
                    CREATE UNLOGGED TABLE IF NOT EXISTS molina.temp (
                        "Broker_NPN"                    BIGINT,
                        "Broker_First_Name"             TEXT,
                        "Broker_Last_Name"              TEXT,
                        "Member_First_Name"             TEXT,
                        "Member_Last_Name"              TEXT,
                        "Address1"                      TEXT,
                        "Address2"                      TEXT,
                        "City"                          TEXT,
                        "State"                         TEXT,
                        "Zip"                           BIGINT,
                        "State.1"                       TEXT,
                        "dob"                           TEXT,
                        "Gender"                        TEXT,
                        "Application_Date"              TEXT,
                        "Effective_date"                TEXT,
                        "Product"                       TEXT,
                        "End_Date"                      TEXT,
                        "Status"                        TEXT,
                        "Member_Premium"                DOUBLE PRECISION,
                        "Total_Premium"                 DOUBLE PRECISION,
                        "Paid_Through_Date"             TEXT,
                        "Net_Due_Amount"                DOUBLE PRECISION,
                        "Scheduled_Term_Date"           TEXT,
                        "HIX_ID"                        TEXT,
                        "Subscriber_ID"                 TEXT,
                        "Member_Count"                  BIGINT,
                        "Member_Bussiness_Phone"        BIGINT,
                        "Original_Effective_Date"       TEXT,
                        "Broker_Start_Date"             TEXT,
                        "Broker_End_Date"               TEXT
                    );

        rollback:
            - sql:
                sql: DROP TABLE IF EXISTS molina.temp;

    - changeSet:
        id: create_view_bs_molina
        author: workwithdante
        changes:
            - createView:
                schemaName: molina
                viewName: bs
                replaceIfExists: true
                selectQuery: |
                    WITH temp2 AS (
                        SELECT
                        t.*,
                        (
                            CASE
                            WHEN t."Status" = 'Active' THEN helpers.last_day_curyear()
                            ELSE t."End_Date"
                            END
                        )::date AS termination_date
                        FROM molina.temp AS t
                    )
                    SELECT
                        temp2.*,
                        CASE
                        WHEN temp2."Status" = 'Active' THEN 'Active'
                        ELSE 'Inactive'
                        END AS policy_status
                    FROM temp2;

    - changeSet:
        id: create_status_molina
        author: workwithdante
        runOnChange: true
        changes:
            - sql:
                splitStatements: false
                stripComments: true
                sql: |                        
                    CREATE OR REPLACE FUNCTION molina.get_status(input_data_csv JSONB, input_data_crm JSONB)
                        RETURNS TABLE(status TEXT, new_clean_input_data_csv JSONB)
                        LANGUAGE plpgsql
                        STABLE
                    AS $$
                        BEGIN
                            new_clean_input_data_csv :=  jsonb_strip_nulls(input_data_csv);

                            status := callers.evaluate_status(new_clean_input_data_csv, input_data_crm);
                            RETURN NEXT;
                        END;
                    $$;
        rollback:
            - sql:
                splitStatements: false
                stripComments: true
                sql: DROP FUNCTION IF EXISTS molina.get_status(JSONB, JSONB);
